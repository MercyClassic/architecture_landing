services:
  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ../backend/.env
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -d postgres' || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 1s
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  api:
    container_name: api
    restart: always
    build:
      context: ../backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../backend/src/logs:/app/backend/src/logs
  nginx:
    image: nginx
    restart: always
    container_name: nginx
    depends_on:
      - api
    ports:
      - "80:80"
    volumes:
      - ../backend/src/media:/app/backend/src/media
      - ../frontend/build:/app/frontend/build
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 1s

  prometheus:
    image: prom/prometheus
    restart: always
    container_name: prometheus
    ports:
      - 9090:9090
    depends_on:
      - api
    volumes:
      - ../backend/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    ports:
      - 3001:3000

volumes:
  postgres_data:
